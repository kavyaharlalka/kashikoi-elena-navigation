# .coveragerc to control coverage.py
[run]
branch = True

[report]
# Regexes for lines to exclude from consideration
exclude_also =
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True
omit = 
	# app.py is for running flask and loading blueprints, it does not need to be tested
    src/app.py
	# config.py just loads the config from ini file
    src/config.py
	# main_controller will be tested using integration tests since it is the api class
	src/controller/main_controller.py
	# view has the frontend code (not in python)
    */view/*
	# routes has the blueprint for flask to call routes from controller
    */routes/*
	# Init files need not be tested
    *__init__.py*

[html]
directory = coverage_html_report